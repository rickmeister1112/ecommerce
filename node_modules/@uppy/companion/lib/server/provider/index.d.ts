export function getProviderMiddleware(providers: Record<string, typeof Provider>, grantConfig: any): (req: object, res: object, next: Function, providerName: string) => void;
export function getDefaultProviders(): Record<string, typeof Provider>;
export function addCustomProviders(customProviders: Record<string, CustomProvider>, providers: Record<string, typeof Provider>, grantConfig: object): void;
export function addProviderOptions(companionOptions: {
    server: object;
    providerOptions: object;
}, grantConfig: object): void;
export type CustomProvider = {
    'module': typeof Provider;
    config: Record<string, unknown>;
};
export function getGrantConfigForProvider({ providerName, companionOptions, grantConfig }: {
    providerName: any;
    companionOptions: any;
    grantConfig: any;
}): any;
import Provider = require("./Provider");
